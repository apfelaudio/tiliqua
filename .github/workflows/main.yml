name: build & test

on: [push]

jobs:
  build-docker:
    if: |
      github.event_name == 'push' && (
        contains(github.event.commits[0].modified, 'gateware/Dockerfile') ||
        contains(github.event.commits[0].modified, 'gateware/pyproject.toml') ||
        contains(github.event.commits[0].modified, 'gateware/pdm.lock') ||
        contains(github.event.commits[0].modified, '.github/workflows/docker.yml')
      )
    uses: ./.github/workflows/docker.yml
    permissions:
      contents: read
      packages: write

  unit-tests:
    needs: build-docker
    if: always()
    runs-on: ubuntu-latest
    container: ghcr.io/apfaudio/tiliqua-builder:latest
    steps:
      - name: Configure git to trust workspace
        run: git config --global --add safe.directory /__w/tiliqua/tiliqua
      - uses: actions/checkout@v4
      - run: |
          pdm use /workspace/.venv
          pdm install
          pdm test
        working-directory: gateware

  bitstream:
    needs: build-docker
    if: always()
    runs-on: ubuntu-latest
    container: ghcr.io/apfaudio/tiliqua-builder:latest
    strategy:
      matrix:
        include:
          - name: usb-audio
            cmd: usb_audio build
          - name: usb-host
            cmd: usb_host build --midi-device arturia-keylab49-mkii
          - name: dsp-nco
            cmd: dsp build --dsp-core nco
          - name: dsp-psram-diffuser
            cmd: dsp build --dsp-core psram_diffuser
          - name: dsp-midicv
            cmd: dsp build --dsp-core midicv
          - name: xbeam
            cmd: xbeam build
          - name: selftest
            cmd: selftest build
          - name: poly
            cmd: polysyn build
          - name: macro-osc
            cmd: macro_osc build
            rust_target: riscv32imafc-unknown-none-elf
          - name: vectorscope
            cmd: vectorscope_no_soc build
          - name: boot
            cmd: bootloader build
          - name: boot-stub
            cmd: bootstub build --bootaddr 0x100000
    steps:
      - name: Configure git to trust workspace
        run: git config --global --add safe.directory /__w/tiliqua/tiliqua
      - uses: actions/checkout@v4
      - run: git submodule update --init --recursive

      # Build bitstream
      - name: Build ${{ matrix.name }}
        run: |
          pdm use /workspace/.venv
          pdm install
          pdm ${{ matrix.cmd }}
        working-directory: gateware

      # Upload artifact
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-${{ github.sha }}
          path: gateware/build/${{ matrix.name }}-*.tar.gz
